Stored Procedures, Stored Functions dan Trigger
Worksheet 6

Nama	: Rachmat Trisnanto

SOAL 6.1

1.	Buatlah Procedure untuk mengupdate harga_jual berdasarkan jenis produk tertentu (jenis_produk_id), beri nama procedure pro_naikan_harga memiliki parameter yang akan menerima argumen: Jenis Produk ID dan Persentase kenaikan harga.
CREATE PROCEDURE ...
MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE PROCEDURE pro_naikan_harga(
    -> IN jenis_produk INT,
    -> IN persentasi_kenaikan INT)
    -> BEGIN
    -> UPDATE produk SET harga_jual = harga_jual + (harga_jual *
    -> persentasi_kenaikan / 100)
    -> WHERE jenis_produk_id = jenis_produk;
    -> END $$
Query OK, 0 rows affected (0.005 sec)

MariaDB [dbpos_sib6]> DELIMITER ;
MariaDB [dbpos_sib6]> SELECT nama, harga_jual, jenis_produk_id FROM produk;
+---------------------+------------+-----------------+
| nama                | harga_jual | jenis_produk_id |
+---------------------+------------+-----------------+
| Televisi 21 inchs   |   50500000 |               1 |
| Televisi 40 inch    |    7440000 |               1 |
| Kulkas 2 pintu      |    4680000 |               1 |
| Meja Makan          |     600000 |               2 |
| Teh Kotak           |       3500 |               4 |
| PC Desktop HP       |    9984000 |               5 |
| Teh Botol           |       2500 |               4 |
| Notebook Acer S     |   11232000 |               5 |
| Notebook Lenovo     |   12480000 |               5 |
| Laptop Lenovo       |   16000000 |               1 |
| Kopi                |      30000 |               4 |
| Teh Sosro 2         |      15000 |               1 |
| Laptop Asus         |    5000000 |               1 |
| Televisi 22 inc`    |   50500000 |               1 |
| Televisi 23 inc     |   50500000 |               1 |
| Televisi 24 inc     |   50500000 |               1 |
| Televisi 25 inc     |   50500000 |               1 |
| Televisi 27 inc     |   50500000 |               1 |
| Televisi 28 inc     |   50500000 |               1 |
| Televisi 29 inc     |   50500000 |               1 |
| Teh Pucuk           |       5000 |               4 |
| Teh Pucuk2          |       5000 |               4 |
| TV TABUNG LG 21INCH |     700000 |               1 |
| SODA GEMBIRA        |       7000 |               7 |
| KECUBUNG            |      15000 |              10 |
+---------------------+------------+-----------------+
25 rows in set (0.001 sec)

MariaDB [dbpos_sib6]> CALL pro_naikan_harga(4,10);
Query OK, 5 rows affected (0.003 sec)

MariaDB [dbpos_sib6]> SELECT nama, harga_jual, jenis_produk_id FROM produk;
+---------------------+------------+-----------------+
| nama                | harga_jual | jenis_produk_id |
+---------------------+------------+-----------------+
| Televisi 21 inchs   |   50500000 |               1 |
| Televisi 40 inch    |    7440000 |               1 |
| Kulkas 2 pintu      |    4680000 |               1 |
| Meja Makan          |     600000 |               2 |
| Teh Kotak           |       3850 |               4 |
| PC Desktop HP       |    9984000 |               5 |
| Teh Botol           |       2750 |               4 |
| Notebook Acer S     |   11232000 |               5 |
| Notebook Lenovo     |   12480000 |               5 |
| Laptop Lenovo       |   16000000 |               1 |
| Kopi                |      33000 |               4 |
| Teh Sosro 2         |      15000 |               1 |
| Laptop Asus         |    5000000 |               1 |
| Televisi 22 inc`    |   50500000 |               1 |
| Televisi 23 inc     |   50500000 |               1 |
| Televisi 24 inc     |   50500000 |               1 |
| Televisi 25 inc     |   50500000 |               1 |
| Televisi 27 inc     |   50500000 |               1 |
| Televisi 28 inc     |   50500000 |               1 |
| Televisi 29 inc     |   50500000 |               1 |
| Teh Pucuk           |       5500 |               4 |
| Teh Pucuk2          |       5500 |               4 |
| TV TABUNG LG 21INCH |     700000 |               1 |
| SODA GEMBIRA        |       7000 |               7 |
| KECUBUNG            |      15000 |              10 |
+---------------------+------------+-----------------+
25 rows in set (0.000 sec)



2.	Buat fungsi umur dengan parameter yang menerima inputan argumen tipe data date dan mengembalikan hasil perhitungan umur (tahun sekarang dikurang tahun inputan) dengan tipe data bilangan bulat (integer) positif.
MariaDB [dbpos_sib6]> DELIMITER $$
CREATE FUNCTION umur1(tgl_lahir DATE)
    -> RETURNS INT
    -> BEGIN
    -> DECLARE umur INT;
    -> SET umur = YEAR(CURDATE()) - YEAR(tgl_lahir);
    -> RETURN umur;
    -> END $$
Query OK, 0 rows affected (0.006 sec)
SELECT nama, umur1(tgl_lahir) AS umur FROM pelanggan;
    -> $$
+--------------------+------+
| nama               | umur |
+--------------------+------+
| Agung Sedayu Group |   14 |
| Pandan Wangi       |   74 |
| Sekar Mirah        |   41 |
| Swandaru Geni      |   43 |
| Pradabashu         |   39 |
| Gayatri Dwi        |   37 |
| Dewi Gyat          |   36 |
| Andre Haru         |   34 |
| Ahmad Hasan        |   32 |
| Cassanndra         |   34 |
| Andi Wijaya        |    1 |
| Ira                |    1 |
+--------------------+------+
12 rows in set (0.001 sec)


3.	Buat fungsi kategori_harga dengan parameter yang menerima inputan argument tipe data double dan mengembalikan tipe data string kategori harga berdasarkan: 
●	0 – 500rb : murah
●	500rb – 3 juta : sedang
●	3jt – 10 juta : mahal 
●	> 10 juta : sangat mahal

MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE FUNCTION kategori_harga(harga DOUBLE)
    -> RETURNS VARCHAR(20)
    -> BEGIN
    -> DECLARE kategori VARCHAR(20);
    -> IF harga <= 500000 THEN
    -> SET kategori = 'murah';
    -> ELSEIF harga <= 3000000 THEN
    -> SET kategori = 'sedang';
    -> ELSEIF harga <= 10000000 THEN
    -> SET kategori = 'mahal';
    -> ELSE
    -> SET kategori = 'sangat mahal';
    -> END IF;
    -> RETURN kategori;
    -> END $$
Query OK, 0 rows affected (0.026 sec)

MariaDB [dbpos_sib6]> DELIMITER ;
MariaDB [dbpos_sib6]> SELECT kategori_harga(2000000) AS kategori;
+----------+
| kategori |
+----------+
| sedang   |
+----------+
1 row in set (0.001 sec)
 

Soal 6.2

Trigger
1.	Buatlah bisnis proses pembayaran dengan menggunakan trigers, dengan skenario sebagai berikut :
- pelanggan memesan didalam table pesanan 
- dilanjutkan dengan proses pembayaran di table pembayaran
- didalam table pembayaran tambahkan kolom status_pembayaran
- jika pesanan sudah dibayar maka status pembayaran akan berubah menjadi lunas 
MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE TRIGGER after_pesanan_insert
    -> AFTER INSERT ON pesanan
    -> FOR EACH ROW
    -> BEGIN
    -> INSERT INTO pembayaran (pesanan_id, status_pembayaran)
    -> VALUES (NEW.id, 'Belum Lunas');
    -> END$$
Query OK, 0 rows affected (0.010 sec)

MariaDB [dbpos_sib6]> CREATE TRIGGER after_pembayaran_insert
    -> AFTER INSERT ON pembayaran
    -> FOR EACH ROW
    -> BEGIN
    -> DECLARE total_pembayaran DECIMAL(10, 2);
    -> DECLARE total_pesanan DECIMAL(10, 2);
    -> SELECT SUM(jumlah) INTO total_pembayaran FROM pembayaran WHERE pesanan_id = NEW.pesanan_id;
    -> SELECT total_harga INTO total_pesanan FROM pesanan WHERE id = NEW.pesanan_id;
    -> IF total_pembayaran >= total_pesanan THEN
    -> UPDATE pembayaran SET status_pembayaran = 'Lunas' WHERE pesanan_id = NEW.pesanan_id;
    -> END IF;
    -> END$$
Query OK, 0 rows affected (0.014 sec)

MariaDB [dbpos_sib6]> DELIMITER ;

2.	Buatlah Stored Procedure dengan nama kurangi_stok untuk mengurangi stok produk. Stok berkurang sesuai dengan jumlah pesanan produk.
MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE PROCEDURE kurangi_stok(
    -> IN produk_id INT,
    -> IN jumlah_pesanan INT)
    -> BEGIN
    -> DECLARE stok_produk INT;
    -> SELECT stok INTO stok_produk FROM produk WHERE id = produk_id;
    -> SET stok_produk = stok_produk - jumlah_pesanan;
    -> IF stok_produk < 0 THEN
    -> SIGNAL SQLSTATE '45000'
    -> SET MESSAGE_TEXT = 'stok produk ridak cukup';
    -> END IF;
    -> UPDATE produk SET stok = stok_produk WHERE id = produk_id;
    -> END $$
Query OK, 0 rows affected (0.006 sec)

MariaDB [dbpos_sib6]> DELIMITER ;
 

3.	Buatlah Trigger dengan nama trig_kurangi_stok yang akan mengurangi stok produk jika terjadi transaksi pesanan oleh pelanggan (memanggil stored procedure kurangi_stok soal no 1).
Trigger ini aktif setelah trigger after_pesanan_items_insert (trigger pada contoh 3).
CREATE TRIGGER ...
MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE TRIGGER kurangi_stok AFTER INSERT
    -> ON pesanan_items
    -> FOR EACH ROW
    -> BEGIN
    -> CALL kurangi_stok(NEW.produk_id. NEW.qty);
    -> END $$
ERROR 1054 (42S22): Unknown column 'NEW' in 'field list'
MariaDB [dbpos_sib6]> CREATE TRIGGER kurangi_stok AFTER INSERT
    -> ON pesanan_items
    -> FOR EACH ROW
    -> BEGIN
    -> CALL kurangi_stok(NEW.produk_id, NEW.qty);
    -> END $$
Query OK, 0 rows affected (0.011 sec)

MariaDB [dbpos_sib6]> DELIMITER ;